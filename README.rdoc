== Pacecar

Pacecar adds named_scope methods to ActiveRecord classes via database column introspection.

== Usage

Assuming a database schema and simple model declaration...

  class CreateSchema < ActiveRecord::Migration
    def self.up
      create_table :users, :force => true do |t|
        t.boolean :admin, :default => false, :null => false
        t.datetime :approved_at
        t.datetime :rejected_at
        t.first_name :string
      end
      create_table :posts, :force => true do |t|
        t.string :owner_type
        t.integer :owner_id
        t.string :publication_state
        t.string :post_type
      end
    end
  end
  
  class User < ActiveRecord::Base
    has_many :posts, :as => :owner
    include Pacecar
  end
  class Post < ActiveRecord::Base
    PUBLICATION_STATES = %w(Draft Submitted Rejected Accepted)
    POST_TYPES = %W(Free Open)
    belongs_to :owner, :polymorphic => true
    include Pacecar
  end

...which yields a number of named scope methods.

= All columns

Records where admin is not null, or where it is null...

  User.admin_present
  User.admin_missing

Records where approved_at is not null, or where it is null...

  User.approved_at_present
  User.approved_at_missing

Records where first_name is not null, or where it is null...

  User.first_name_present
  User.first_name_missing

Records ordered by first_name (default to 'asc', can specify to override)...

  User.by_first_name
  User.by_first_name(:asc)
  User.by_first_name(:desc)

Records where an attribute matches a search term (column LIKE "%term%")...

  User.first_name_matches('John')

= Boolean columns

Records that are all admins or non-admins...

  User.admin
  User.not_admin

= Datetime columns

Records approved before or after certain times...

  User.approved_at_before(5.days.ago)
  User.approved_at_after(4.weeks.ago)

Records with approved_at in the past or future...

  User.approved_at_in_past
  User.approved_at_in_future

Records with approved_at inside or outside of two times...

  User.approved_at_inside(10.days.ago, 1.day.ago)
  User.approved_at_outside(2.days.ago, 1.day.ago)

Records with certain year, month or day...

  User.approved_at_in_year(2000)
  User.approved_at_in_month(01)
  User.approved_at_in_day(01)

Records with a duration (time delta between two columns) of, over or under a certain number of days...

  User.duration_between(:approved_at, :rejected_at).with_duration_of(14)
  User.duration_between(:approved_at, :rejected_at).with_duration_over(14)
  User.duration_between(:approved_at, :rejected_at).with_duration_under(14)

= Polymorphic relationships

Records which have an owner_type of User...

  Post.for_owner_type(User)

= State columns

Records which are in a particular state, or not in a state...

  Post.publication_state_draft
  Post.post_type_not_open

= Named scopes

Because these are all named_scope, you can combine them.

To get all users that have a first_name set, who are admins and approved more than 2 weeks ago, ordered by their first name...

  User.first_name_present.admin.approved_at_before(2.weeks.ago).by_first_name
